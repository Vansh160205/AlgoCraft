

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  submissions Submission[]
}

model Problem {
  id              Int         @id @default(autoincrement())
  title           String
  slug            String      @unique
  description     String
  difficulty      String
  companyTags     String[]
  topicTags       String[]
  inputFormat     String
  outputFormat    String
  boilerplatePython   String      // Generated boilerplate code for Python
  boilerplateCpp  String      // Generated boilerplate code for C++
  boilerplateJava String      // Generated boilerplate code for Java
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  testCases       TestCase[]
  submissions     Submission[]
}

model TestCase {
  id          Int      @id @default(autoincrement())
  input       String
  output      String
  isPublic    Boolean  @default(false)
  problemId   Int
  problem     Problem  @relation(fields: [problemId], references: [id])
}


model Submission {
  id            Int       @id @default(autoincrement())
  code          String    // Submitted code
  language      String    // e.g., 'python', 'cpp', 'java'
  status        String    // e.g., 'Accepted', 'Wrong Answer', 'Compilation Error'
  output        String?   // Output produced by the submission
  error         String?   // Error message if any
  runtime       Float?    // Execution time in seconds (optional)
  memory        Int?      // Memory used in KB (optional)
  submittedAt   DateTime  @default(now())

  // Relations
  userId        Int
  user          User      @relation(fields: [userId], references: [id])

  problemId     Int
  problem       Problem   @relation(fields: [problemId], references: [id])
}